[pytest]
# Adding metadata to the pytest session
# Add markers for specific test categories
markers =
    regression: mark a test as part of the regression suite
    smoke: mark a test as part of the smoke suite

# Configure the default timeout for tests
timeout = 30

# Configuring the browser for test execution
# Default browser is set to 'chrome', but can be overridden via the command line
# Additional options for pytest, such as parallel execution (-n auto),
;    stopping after two test failures (--maxfail=1),
;    and setting up Allure reporting (--alluredir=./reports/allure)
addopts = -n auto --maxfail=5 --disable-warnings --browser=chrome --strict-markers -p no:warnings

# Configure pytest HTML report generation (optional)
# addopts = --html=reports/test_report.html --self-contained-html

# Define the base URL and browser as environment variables
; Configuring the base URL of the application (Flipkart)
env =
    BASE_URL = https://www.flipkart.com
    BROWSER = chrome

# Custom logging format for test execution logging (integrated with logger.py)
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s - %(name)s - %(levelname)s - %(message)s
log_file_level = INFO
log_file_format = %(asctime)s - %(name)s - %(levelname)s - %(message)s
log_file = logs/test_log.log

# Directory for storing reports and test results
# Allure results will be stored in ./reports/allure directory
# Pytest reports will be stored in ./reports/pytest
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Hook configuration: the test session should include both Allure and Pytest reports
;junit_family = xunit2
;junit_suite_name = Flipkart Test Suite
;junit_logging = all
;junit_log_output = ./reports/pytest/test_results.xml

# Screenshot settings - captured on test failure and stored in the 'Screenshots' folder
# These settings are managed in utils/screenshot.py
screenshot_dir = ./Screenshots

# Allure reporting configuration - captures detailed test metadata
#allure_report_dir = ./reports/allure

# Metadata for Allure report
;allure_severity = normal
;allure_features = Ordering Flow
;allure_owner = automation_team
;allure_labels = pytest, selenium

# Specify custom options for the pytest-metadata plugin
[pytest-metadata]
metadata =
    Project Name = Flipkart Automation Framework
    Test Cases = BDD Tests for item ordering
    Version = 1.0
    Browser = Chrome
